worker_processes  auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;
user  nginx;

events {
        use epoll;
        worker_connections  1024;
        multi_accept on;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
	
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    log_format  main_json '{"@timestamp": "$time_iso8601", '
                          '"remote_addr": "$remote_addr", '
                          '"scheme": "$scheme", '
                          '"request_method": "$request_method", '
                          '"host": "$host", '
                          '"request_uri": "$request_uri", '
                          '"body_bytes_sent": $body_bytes_sent, '
                          '"http_referer": "$http_referer", '
                          '"http_user_agent": "$http_user_agent", '
                          '"upstream_addr": "$upstream_addr", '
                          '"request_time": $request_time, '
                          '"request_length": $request_length, '
                          '"upstream_connect_time": "$upstream_connect_time", '
                          '"upstream_response_time": "$upstream_response_time", '
                          '"upstream_status": "$upstream_status", '
                          '"status": "$status"}';
                                                 
                                                 
    access_log /var/log/nginx/access.log main_json;
    error_log /var/log/nginx/error.log notice;

    keepalive_timeout  65;
    sendfile          on;
	
    gzip on;
	
    upstream nexus_web {
        server nexus:8081;
    }
    
    upstream nexus_docker_pull {
        server nexus:8082;
    }
    
    upstream nexus_docker_push {
        server nexus:8083;
    }

    server {
        charset utf-8;
        listen [::]:80 default_server;
        listen 80 default_server;
        server_name _;
		
        client_max_body_size 0;
        chunked_transfer_encoding on;
		
        set $upstream "nexus_docker_push";
        if ( $request_method ~* 'GET') {
            set $upstream "nexus_docker_pull";
        }
    
        location / {
                proxy_pass http://$upstream;
                proxy_set_header Host $host;
                proxy_connect_timeout 3600;
                proxy_send_timeout 3600;
                proxy_read_timeout 3600;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_buffering off;
                proxy_request_buffering off;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto http;
                proxy_set_header Authorization "Basic YWRtaW46MTIzNDU2";
        }
    }
}
